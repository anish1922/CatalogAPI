// <auto-generated />

using System;
using Catalog.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Catalog.API.Migrations
{
    [DbContext(typeof(CatalogContext))]
    [Migration("20190831115304_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Catalog.Domain.Entities.Artist", b =>
                {
                    b.Property<Guid>("ArtistId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("ArtistId");

                    b.ToTable("Artists","catalog");
                });

            modelBuilder.Entity("Catalog.Domain.Entities.Genre", b =>
                {
                    b.Property<Guid>("GenreId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GenreDescription")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.HasKey("GenreId");

                    b.ToTable("Genres","catalog");
                });

            modelBuilder.Entity("Catalog.Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ArtistId");

                    b.Property<int>("AvailableStock");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<string>("Format");

                    b.Property<Guid>("GenreId");

                    b.Property<bool>("IsInactive");

                    b.Property<string>("LabelName");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PictureUri");

                    b.Property<string>("Price");

                    b.Property<DateTimeOffset>("ReleaseDate");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Items","catalog");
                });

            modelBuilder.Entity("Catalog.Domain.Entities.Item", b =>
                {
                    b.HasOne("Catalog.Domain.Entities.Artist", "Artist")
                        .WithMany("Items")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catalog.Domain.Entities.Genre", "Genre")
                        .WithMany("Items")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
